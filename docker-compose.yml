version: "3.1"
services: 
  backend-app:
    container_name: backend-app
    image: python:3.6.8-alpine3.9
    restart: always
    build: ./application_backend/
    command: /bin/sh -c "sleep 7; python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes: 
      - ./application_backend:/application
    ports: 
      - 8000:8000
    depends_on:
      - db-app
    networks: 
      - backend-app-nt
      - db-pg-app
  frontend-app:
    container_name: frontend-app
    image: node:11.14.0-alpine
    restart: always
    build: ./application_frontend/
    command: /bin/sh -c "cd crud-app && npm start"
    volumes:
      - ./application_frontend:/application-frontend
    ports:
      - 4200:4200
    depends_on: 
      - backend-app
    networks: 
      - backend-app-nt
      - frontend-app-nt
  db-app:
    container_name: db-application
    image: postgres:11.2-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: neto6391
      POSTGRES_PASSWORD: demoapp
      POSTGRES_DB: demoapp
    ports:
      - "5432:5432"
    networks: 
      - db-pg-app
  db-front-app:
    container_name: db-front-app
    image: dpage/pgadmin4
    restart: always
    environment: 
      PGADMIN_DEFAULT_EMAIL: neto.rodrigues6391@gmail.com 
      PGADMIN_DEFAULT_PASSWORD: demoapp
    ports:
      - "16543:80"
    depends_on:
      - db-app
    networks:
      - db-pg-app
volumes:
  postgres-data:
networks: 
  backend-app-nt: 
    driver: bridge
  db-pg-app:
    driver: bridge
  frontend-app-nt:
    driver: bridge
